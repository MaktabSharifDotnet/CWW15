// <auto-generated />
using CWW15.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CWW15.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CWW15.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Digital Goods"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Home Appliances"
                        });
                });

            modelBuilder.Entity("CWW15.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Apple",
                            CategoryId = 1,
                            Color = "Silver",
                            Name = "Laptop",
                            Price = 1200.00m,
                            Stock = 15
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Samsung",
                            CategoryId = 1,
                            Color = "Black",
                            Name = "Smartphone",
                            Price = 800.00m,
                            Stock = 50
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Sony",
                            CategoryId = 1,
                            Color = "White",
                            Name = "Headphones",
                            Price = 150.50m,
                            Stock = 100
                        },
                        new
                        {
                            Id = 4,
                            Brand = "Garmin",
                            CategoryId = 1,
                            Color = "Gray",
                            Name = "Smartwatch",
                            Price = 250.00m,
                            Stock = 30
                        },
                        new
                        {
                            Id = 5,
                            Brand = "Microsoft",
                            CategoryId = 1,
                            Color = "Black",
                            Name = "Gaming Console",
                            Price = 500.00m,
                            Stock = 25
                        },
                        new
                        {
                            Id = 6,
                            Brand = "LG",
                            CategoryId = 2,
                            Color = "Stainless Steel",
                            Name = "Refrigerator",
                            Price = 1500.00m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 7,
                            Brand = "Bosch",
                            CategoryId = 2,
                            Color = "White",
                            Name = "Washing Machine",
                            Price = 900.00m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 8,
                            Brand = "Panasonic",
                            CategoryId = 2,
                            Color = "Black",
                            Name = "Microwave Oven",
                            Price = 200.00m,
                            Stock = 40
                        },
                        new
                        {
                            Id = 9,
                            Brand = "Dyson",
                            CategoryId = 2,
                            Color = "Red",
                            Name = "Vacuum Cleaner",
                            Price = 300.00m,
                            Stock = 35
                        },
                        new
                        {
                            Id = 10,
                            Brand = "Philips",
                            CategoryId = 2,
                            Color = "Black",
                            Name = "Coffee Maker",
                            Price = 120.99m,
                            Stock = 60
                        });
                });

            modelBuilder.Entity("CWW15.Entities.Product", b =>
                {
                    b.HasOne("CWW15.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CWW15.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
